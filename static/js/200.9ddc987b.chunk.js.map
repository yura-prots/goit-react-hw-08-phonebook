{"version":3,"file":"static/js/200.9ddc987b.chunk.js","mappings":"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","sources":["redux/contacts/selector.js","components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.jsx","components/ContactsFilter/ContactsFilter.styled.js","redux/filter/selector.js","components/ContactsFilter/ContactsFilter.jsx","components/ListItem/ListItem.styled.js","components/ListItem/ListItem.jsx","components/ContactsList/ContactsList.styled.js","components/ContactsList/ContactsList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx","hooks/useContacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px 4px 4px 8px;\n  width: 300px;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  background-color: ${p => p.theme.colors.white};\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 8px;\n  min-width: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 14px;\n  border: 1px solid ${p => p.theme.colors.black};\n  background: transparent;\n  text-align: center;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out,\n    color 250ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 0px 10px 0px ${p => p.theme.colors.green};\n    transform: scale(1.1);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\n\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selector';\nimport {\n  Form,\n  FormGroup,\n  Field,\n  ErrorMessage,\n  Button,\n} from './ContactsForm.styled';\n\nconst contactSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  number: Yup.string().min(6, 'Too Short!').required('Required'),\n});\n\nconst ContactsForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (values, actions) => {\n    const nameToAdd = values.name.toLowerCase();\n    const nameInList = contacts.find(contact => {\n      return contact.name.toLowerCase() === nameToAdd;\n    });\n\n    if (nameInList) {\n      return toast.info(`Contact ${nameToAdd} in the list`);\n    }\n\n    dispatch(addContact(values));\n    toast.info(`Contact ${nameToAdd} added to list`);\n    actions.resetForm();\n  };\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          name: '',\n          number: '',\n        }}\n        validationSchema={contactSchema}\n        onSubmit={onFormSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <FormGroup>\n            Name\n            <Field id=\"name\" type=\"text\" name=\"name\" required />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Phone\n            <Field id=\"number\" type=\"text\" name=\"number\" required />\n            <ErrorMessage name=\"number\" component=\"span\" />\n          </FormGroup>\n\n          <Button type=\"submit\">Add contact</Button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nexport default ContactsForm;\n","import styled from 'styled-components';\n\nexport const Filter = styled.input`\n  width: 240px;\n  padding: 4px 4px 4px 8px;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n\n  &:focus {\n    box-shadow: 1px 1px 4px 0px ${p => p.theme.colors.blue};\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from '../contacts/selector';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact => {\n      const contactName = contact.name.toLowerCase().trim();\n      const filterName = filter.toLowerCase().trim();\n\n      return contactName.includes(filterName);\n    });\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { Filter } from './ContactsFilter.styled';\nimport { filterContacts } from '../../redux/filter/slice';\nimport { selectFilter } from '../../redux/filter/selector';\n\nconst ContactsFilter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Filter\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={e => dispatch(filterContacts(e.target.value))}\n        placeholder=\"Find contact by name\"\n      />\n    </div>\n  );\n};\n\nexport default ContactsFilter;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  padding: 5px;\n  transition: transform 250ms ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  min-width: 40px;\n  border: none;\n  padding: 4px;\n  cursor: pointer;\n  background: transparent;\n  border-radius: 18px;\n  font-size: 14px;\n  text-align: center;\n\n  transition: box-shadow 250ms ease-in-out, color 250ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 0px 10px 0px ${p => p.theme.colors.tomato};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { Item, DeleteBtn } from './ListItem.styled';\n\nconst ListItem = ({ contact: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = (id, name) => {\n    dispatch(deleteContact(id));\n    toast.info(`Contact ${name} deleted from list`);\n  };\n\n  return (\n    <Item>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <DeleteBtn type=\"button\" onClick={() => onDeleteContact(id, name)}>\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nListItem.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border-radius: 4px;\n  list-style: none;\n`;\n","import { useSelector } from 'react-redux';\n\nimport { selectVisibleContacts } from '../../redux/filter/selector';\nimport ListItem from 'components/ListItem';\nimport { List } from './ContactsList.styled';\n\nconst ContactsList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <List>\n        {visibleContacts.map(contact => (\n          <ListItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nimport bg from '../../styles/images/bg.jpg';\n\nexport const Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  width: 700px;\n  margin-right: auto;\n  margin-left: auto;\n  padding: 10px;\n  margin-top: 25px;\n  border-radius: 8px;\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n  background-image: url(${bg});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-height: 40px;\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  font-weight: 700;\n  font-size: 24px;\n  margin-top: 60px;\n  margin-bottom: 12px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { DotLoader } from 'react-spinners';\n\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { useContacts } from 'hooks/useContacts';\nimport ContactsForm from 'components/ContactsForm';\nimport ContactsFilter from 'components/ContactsFilter';\nimport ContactsList from 'components/ContactsList';\nimport { Container, Wrapper, Title } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const { contacts, isLoading } = useContacts();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook</Title>\n\n      <Wrapper>\n        <DotLoader\n          color={'#5febf9'}\n          loading={isLoading}\n          size={40}\n          aria-label=\"Loading Spinner\"\n          data-testid=\"loader\"\n        />\n      </Wrapper>\n\n      <ContactsForm />\n\n      {contacts.length > 0 && (\n        <Wrapper>\n          <Title>Contacts</Title>\n          <ContactsFilter />\n          <ContactsList />\n        </Wrapper>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContacts,\n  selectIsLoading,\n  selectError,\n} from '../redux/contacts/selector';\n\nexport const useContacts = () => {\n  return {\n    contacts: useSelector(selectContacts),\n    isLoading: useSelector(selectIsLoading),\n    error: useSelector(selectError),\n  };\n};\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","FormGroup","_templateObject2","Field","FormikField","_templateObject3","p","theme","colors","white","ErrorMessage","FormikError","_templateObject4","red","Button","_templateObject5","black","green","contactSchema","Yup","shape","name","min","required","number","useSelector","dispatch","useDispatch","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","nameToAdd","toLowerCase","find","contact","toast","concat","addContact","resetForm","_jsxs","autoComplete","id","type","component","Filter","blue","selectFilter","filter","selectVisibleContacts","createSelector","contactName","trim","filterName","includes","value","onChange","e","filterContacts","target","placeholder","Item","DeleteBtn","tomato","_ref","_ref$contact","onClick","deleteContact","onDeleteContact","List","visibleContacts","map","ListItem","Container","bg","Wrapper","Title","_useContacts","useEffect","fetchContacts","DotLoader","color","loading","size","ContactsForm","length","ContactsFilter","ContactsList"],"sourceRoot":""}