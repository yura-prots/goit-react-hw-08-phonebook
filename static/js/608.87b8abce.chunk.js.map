{"version":3,"file":"static/js/608.87b8abce.chunk.js","mappings":"mPAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6FAOzBC,EAAYJ,EAAAA,GAAAA,MAAYK,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oEAMxBG,GAAQN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAmBQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+LAMlB,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,KAAK,IAIlCC,GAAeb,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAmBe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yBACpC,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOK,GAAG,IAGrBC,EAASjB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uaAOb,SAAAM,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,KAAK,IAQZ,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,OAAOS,KAAK,I,mBCpCtDC,EAAqBC,EAAAA,KAAaC,MAAM,CAC5CC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,YACjDC,MAAOL,EAAAA,KAAaK,MAAM,iBAAiBD,SAAS,YACpDE,SAAUN,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,cAkDvD,EA/CqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MAOjB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBAEJC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbZ,KAAM,GACNG,MAAO,GACPC,SAAU,IAEZS,iBAAkBhB,EAClBiB,SAhBe,SAACC,EAAQC,GAC5BX,GAASY,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAa6BT,UAEvBF,EAAAA,EAAAA,MAAChC,EAAI,CAAC4C,aAAa,MAAKV,SAAA,EACtBF,EAAAA,EAAAA,MAAC3B,EAAS,CAAA6B,SAAA,CAAC,QAETC,EAAAA,EAAAA,KAAC5B,EAAK,CAACsC,GAAG,OAAOC,KAAK,OAAOrB,KAAK,OAAOE,UAAQ,KACjDQ,EAAAA,EAAAA,KAACrB,EAAY,CAACW,KAAK,OAAOsB,UAAU,aAGtCf,EAAAA,EAAAA,MAAC3B,EAAS,CAAA6B,SAAA,CAAC,SAETC,EAAAA,EAAAA,KAAC5B,EAAK,CAACsC,GAAG,QAAQC,KAAK,QAAQrB,KAAK,QAAQE,UAAQ,KACpDQ,EAAAA,EAAAA,KAACrB,EAAY,CAACW,KAAK,QAAQsB,UAAU,aAGvCf,EAAAA,EAAAA,MAAC3B,EAAS,CAAA6B,SAAA,CAAC,YAETC,EAAAA,EAAAA,KAAC5B,EAAK,CAACsC,GAAG,WAAWC,KAAK,WAAWrB,KAAK,WAAWE,UAAQ,KAC7DQ,EAAAA,EAAAA,KAACrB,EAAY,CAACW,KAAK,WAAWsB,UAAU,aAG1CZ,EAAAA,EAAAA,KAACjB,EAAM,CAAC4B,KAAK,SAAQZ,SAAC,oBAKhC,C","sources":["pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 4px 4px 4px 8px;\n  width: 300px;\n  border-radius: 4px;\n  outline: none;\n  border: none;\n  background-color: ${p => p.theme.colors.white};\n  box-shadow: 1px 1px 4px 0px rgba(0, 0, 0, 0.5);\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: ${p => p.theme.colors.red};\n`;\n\nexport const Button = styled.button`\n  display: block;\n  padding: 8px;\n  min-width: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 14px;\n  border: 1px solid ${p => p.theme.colors.black};\n  background: transparent;\n  text-align: center;\n  cursor: pointer;\n  transition: transform 250ms ease-in-out, box-shadow 250ms ease-in-out,\n    color 250ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 0px 10px 0px ${p => p.theme.colors.green};\n    transform: scale(1.1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  FormGroup,\n  Field,\n  ErrorMessage,\n  Button,\n} from './RegisterPage.styled';\nimport { register } from '../../redux/auth/operations';\n\nconst registrationSchema = Yup.object().shape({\n  name: Yup.string().min(2, 'Too Short!').required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string().min(1, 'Too Short!').required('Required'),\n});\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n\n  const onFormSubmit = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm();\n  };\n\n  return (\n    <>\n      <h2>Register Page</h2>\n\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={registrationSchema}\n        onSubmit={onFormSubmit}\n      >\n        <Form autoComplete=\"off\">\n          <FormGroup>\n            Name\n            <Field id=\"name\" type=\"name\" name=\"name\" required />\n            <ErrorMessage name=\"name\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Email\n            <Field id=\"email\" type=\"email\" name=\"email\" required />\n            <ErrorMessage name=\"email\" component=\"span\" />\n          </FormGroup>\n\n          <FormGroup>\n            Password\n            <Field id=\"password\" type=\"password\" name=\"password\" required />\n            <ErrorMessage name=\"password\" component=\"span\" />\n          </FormGroup>\n\n          <Button type=\"submit\">Register</Button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","FormGroup","_templateObject2","Field","FormikField","_templateObject3","p","theme","colors","white","ErrorMessage","FormikError","_templateObject4","red","Button","_templateObject5","black","green","registrationSchema","Yup","shape","name","min","required","email","password","dispatch","useDispatch","_jsxs","_Fragment","children","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","autoComplete","id","type","component"],"sourceRoot":""}